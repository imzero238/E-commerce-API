server:
  port: 0

spring:
  application:
    name: order-service
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
  data:
    redis:
      port: 6379
  kafka:
    producer:
      acks: all
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.ecommerce.orderservice.kafka.dto.OrderDtoSerializer
    consumer:
      group-id: orderServiceGroup
      key-deserializer: org.apache.kafka.common.serialization.StringSerializer
      value-deserializer: com.ecommerce.orderservice.kafka.dto.OrderDtoDeserializer
    streams:
      application-id: order_application
  main:
    allow-bean-definition-overriding: true
  cloud:
    openfeign:
      client:
        config:
          default:
            connect-timeout: 5000
            read-timeout: 5000
            logger-level: basic
    discovery:
      client:
        simple:
          local:
            port: 8089
            service-id: item-service

logging:
  level:
    com.ecommerce.orderservice: debug

eureka:
  instance:
    instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
#    prefer-ip-address: true
  client:
    eureka-server-port: 8061
    register-with-eureka: true
    fetch-registry: true

resilience4j:
  retry:
    retry-aspect-order: 2
  circuitbreaker:
    circuit-breaker-aspect-order: 1